import React, { createContext, useContext, useEffect } from 'react';
import PocketBase from 'pocketbase';
import { Platform } from 'react-native';
import Constants from 'expo-constants';

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è URL –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏–π
const getServerURL = () => {
  // –í —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (Expo Go)
  if (__DEV__) {
    return 'http://xn--d1aigb4b.xn--p1ai:8090';
  }

  // –í production APK - –∏—Å–ø–æ–ª—å–∑—É–µ–º HTTPS –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–π HTTP
  // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π production URL
  return 'http://xn--d1aigb4b.xn--p1ai:8090';
};

const PB_URL = getServerURL();

console.log('üèóÔ∏è [PocketBase] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è PocketBase —Å URL:', PB_URL);
console.log('üîß [PocketBase] –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:', __DEV__);
console.log('üì± [PocketBase] –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞:', Platform.OS);

const pb = new PocketBase(PB_URL);

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–∞–π–º–∞—É—Ç–æ–≤ –¥–ª—è –ª—É—á—à–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–µ—Ç–µ–≤—ã—Ö –æ—à–∏–±–æ–∫
pb.beforeSend = function (url, options) {
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤
  options.timeout = 10000; // 10 —Å–µ–∫—É–Ω–¥

  console.log('üåê [PocketBase] –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å:', {
    url: url,
    method: options.method || 'GET',
    timeout: options.timeout
  });

  return { url, options };
};

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫
pb.afterSend = function (response, data) {
  console.log('üì° [PocketBase] –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω:', {
    status: response.status,
    ok: response.ok,
    url: response.url
  });

  return data;
};

// –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—à–∞—Ç–µ–ª—å –∏–∑–º–µ–Ω–µ–Ω–∏–π authStore –¥–ª—è –¥–µ–±–∞–≥–∞
pb.authStore.onChange((token, model) => {
  console.log('üîÑ [PocketBase] AuthStore –∏–∑–º–µ–Ω–∏–ª—Å—è:', {
    hasToken: !!token,
    hasModel: !!model,
    isValid: pb.authStore.isValid,
    modelType: model?.collectionName || 'unknown'
  });
});

const PocketBaseContext = createContext<PocketBase | undefined>(undefined);

export const PocketBaseProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {
  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    const checkServerHealth = async () => {
      try {
        console.log('üîç [PocketBase] –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞...');

        // –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
        const response = await fetch(PB_URL + '/api/health', {
          method: 'GET',
          timeout: 5000,
        });

        if (response.ok) {
          console.log('‚úÖ [PocketBase] –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω');
        } else {
          console.warn('‚ö†Ô∏è [PocketBase] –°–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç —Å –æ—à–∏–±–∫–æ–π:', response.status);
        }
      } catch (error) {
        console.error('‚ùå [PocketBase] –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', error);
        console.error('üîß [PocketBase] –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:');
        console.error('   1. –ò–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ');
        console.error('   2. URL —Å–µ—Ä–≤–µ—Ä–∞:', PB_URL);
        console.error('   3. –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞ –∏–∑–≤–Ω–µ');
      }
    };

    checkServerHealth();
  }, []);

  return (
    <PocketBaseContext.Provider value={pb}>
      {children}
    </PocketBaseContext.Provider>
  );
};

export const usePocketBase = () => {
  const context = useContext(PocketBaseContext);
  if (!context) {
    throw new Error('usePocketBase must be used within a PocketBaseProvider');
  }
  return context;
};
