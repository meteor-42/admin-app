import React, { createContext, useContext, useState, useEffect, useCallback } from 'react';
import AsyncStorage from '@react-native-async-storage/async-storage';
import { usePocketBase } from './PocketBaseContext';
import { User, AuthState } from '../types';

/* eslint-disable @typescript-eslint/no-unused-vars */
interface AuthContextType extends AuthState {
  login: (email: string, password: string) => Promise<void>;
  logout: () => Promise<void>;
  checkAuth: () => Promise<void>;
}
/* eslint-enable @typescript-eslint/no-unused-vars */

const AuthContext = createContext<AuthContextType | undefined>(undefined);

export const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {
  const pb = usePocketBase();
  const [authState, setAuthState] = useState<AuthState>({
    user: null,
    token: null,
    isLoading: true,
  });

  const logout = useCallback(async () => {
    if (__DEV__) console.warn('üö™ [logout] –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –≤—ã—Ö–æ–¥–∞');

    if (__DEV__) console.warn('üóëÔ∏è [logout] –û—á–∏—â–∞–µ–º PocketBase authStore');
    pb.authStore.clear();

    if (__DEV__) console.warn('üíæ [logout] –£–¥–∞–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ AsyncStorage');
    await AsyncStorage.removeItem('pb_auth');

    if (__DEV__) console.warn('üîÑ [logout] –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    setAuthState({
      user: null,
      token: null,
      isLoading: false,
    });

    if (__DEV__) console.warn('‚úÖ [logout] –í—ã—Ö–æ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω');
  }, [pb.authStore]);

  const checkAuth = useCallback(async () => {
    if (__DEV__) console.warn('üîÑ [checkAuth] –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏');
    try {
      const token = await AsyncStorage.getItem('pb_auth');
      if (__DEV__) console.warn(`üîë [checkAuth] –¢–æ–∫–µ–Ω –≤ AsyncStorage: ${!!token}`);

      if (token) {
        if (__DEV__) console.warn('üìù [checkAuth] –ü–∞—Ä—Å–∏–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏');
        const authData = JSON.parse(token);
        if (__DEV__) console.warn(`üé´ [checkAuth] –î–∞–Ω–Ω—ã–µ —Ç–æ–∫–µ–Ω–∞: ${!!authData.token}, –º–æ–¥–µ–ª—å: ${!!authData.model}`);

        if (__DEV__) console.warn('üíæ [checkAuth] –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Å—Å–∏—é –≤ PocketBase...');
        pb.authStore.save(authData.token, authData.model);

        // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –ø–æ–ª–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ PocketBase
        await new Promise(resolve => setTimeout(resolve, 100));

        if (__DEV__) {
          console.warn(`‚úÖ [checkAuth] PocketBase authStore.isValid: ${pb.authStore.isValid}`);
          console.warn(`üîê [checkAuth] PocketBase authStore.token: ${!!pb.authStore.token}`);
          console.warn(`üë§ [checkAuth] PocketBase authStore.model: ${!!pb.authStore.model}`);
        }

        if (pb.authStore.isValid) {
          if (__DEV__) console.warn('üéâ [checkAuth] –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
          setAuthState({
            user: pb.authStore.model as User,
            token: pb.authStore.token,
            isLoading: false,
          });
        } else {
          if (__DEV__) console.warn('‚ö†Ô∏è [checkAuth] –¢–æ–∫–µ–Ω –Ω–µ–≤–∞–ª–∏–¥–µ–Ω, –≤—ã–ø–æ–ª–Ω—è–µ–º logout');
          await logout();
        }
      } else {
        if (__DEV__) console.warn('üì≠ [checkAuth] –ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–∞, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
        setAuthState(prev => ({ ...prev, isLoading: false }));
      }
    } catch (error: unknown) {
      console.error('‚ùå [checkAuth] –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:', error);
      if (__DEV__) {
        console.warn('üîç [checkAuth] –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', {
          message: (error as any)?.message,
          stack: (error as any)?.stack
        });
      }
      setAuthState(prev => ({ ...prev, isLoading: false }));
    }
  }, [pb.authStore, logout]);

  useEffect(() => {
    checkAuth();
  }, [checkAuth]);

  const login = async (email: string, password: string) => {
    if (__DEV__) {
      console.warn('üîê [login] –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
      console.warn(`üìß [login] Email: ${email}`);
      console.warn(`üîó [login] PocketBase URL: ${pb.baseUrl}`);
    }

    try {
      if (__DEV__) console.warn('üåê [login] –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∫ _superusers...');
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏—é _superusers —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
      const authData = await pb.collection('_superusers').authWithPassword(email, password);

      if (__DEV__) {
        console.warn('‚úÖ [login] –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞');
        console.warn(`üë§ [login] –ü–æ–ª—É—á–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${authData.record?.email || 'unknown'}`);
        console.warn(`üé´ [login] –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: ${!!authData.token}`);
        console.warn(`üîê [login] PocketBase authStore.isValid: ${pb.authStore.isValid}`);
      }

      if (__DEV__) console.warn('üíæ [login] –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ AsyncStorage...');
      await AsyncStorage.setItem('pb_auth', JSON.stringify({
        token: pb.authStore.token,
        model: pb.authStore.model,
      }));
      if (__DEV__) console.warn('‚úÖ [login] –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ AsyncStorage');

      // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è
      await new Promise(resolve => setTimeout(resolve, 50));

      if (__DEV__) console.warn('üéâ [login] –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
      setAuthState({
        user: authData.record as User,
        token: pb.authStore.token,
        isLoading: false,
      });

      if (__DEV__) console.warn('üöÄ [login] –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
    } catch (error: unknown) {
      console.error('‚ùå [login] –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error);
      if (__DEV__) {
        console.warn('üîç [login] –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', {
          // narrow as any for logging only
          message: (error as any)?.message,
          status: (error as any)?.status,
          data: (error as any)?.data,
          url: (error as any)?.url,
          name: (error as any)?.name
        });
      }

      // –£–ª—É—á—à–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–µ—Ç–µ–≤—ã—Ö –æ—à–∏–±–æ–∫
      let userFriendlyMessage = '–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏';

      if ((error as any)?.name === 'TypeError' && (error as any)?.message?.includes('fetch')) {
        userFriendlyMessage = '–ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–µ—Ç—å—é. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.';
        console.error('üåê [login] –°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞ - —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
      } else if ((error as any)?.status === 400) {
        userFriendlyMessage = '–ù–µ–≤–µ—Ä–Ω—ã–π email –∏–ª–∏ –ø–∞—Ä–æ–ª—å';
      } else if ((error as any)?.status === 0 || (error as any)?.message?.includes('Network request failed')) {
        userFriendlyMessage = '–°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.';
        console.error('üåê [login] –°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞ - –Ω–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É');
      } else if ((error as any)?.status >= 500) {
        userFriendlyMessage = '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.';
      }

      // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –æ—à–∏–±–∫—É —Å –ø–æ–Ω—è—Ç–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
      const friendlyError = new Error(userFriendlyMessage);
      (friendlyError as any).originalError = error as any;
      throw friendlyError;
    }
  };

  return (
    <AuthContext.Provider
      value={{
        ...authState,
        login,
        logout,
        checkAuth,
      }}
    >
      {children}
    </AuthContext.Provider>
  );
};

export const useAuth = () => {
  const context = useContext(AuthContext);
  if (!context) {
    throw new Error('useAuth must be used within an AuthProvider');
  }
  return context;
};
